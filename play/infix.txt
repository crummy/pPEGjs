    expr  = var (op var)*
    op    = _ (op_1L / op_2L / op_3R) _
    var   = [a-zA-Z0-9]+
    op_1L = [-+]
    op_2L = [*/]
    op_3R = '^'
    _     = [ \t\n\r]*
--------
1+2*3
--------
1+2-3*4+1
--------
x^n^2+1
======================================
    expr  = var (op var)* <infix>
    op    = _ (op_1L / op_2L / op_3R) _
    var   = [a-zA-Z0-9]+
    op_1L = [-+]
    op_2L = [*/]
    op_3R = '^'
    _     = [ \t\n\r]*
--------
1+2+3+4-5
--------
1+2-3*4+1
--------
x^n^2+1
=======================================
    expr  = var (op var)*
    op    = _ (op_1L / op_AL / op_aR) _
    var   = [a-zA-Z0-9]+
    op_1L = [-+]
    op_AL = [*/]
    op_aR = '^'
    _     = [ \t\n\r]*
--------
1+2*3
--------
1+2-3*4+1
--------
x^n^2+1
==========================================
    expr  = var (op var)* <infix>
    op    = _ (op_1L / op_AL / op_aR) _
    var   = [a-zA-Z0-9]+
    op_1L = [-+]
    op_AL = [*/]
    op_aR = '^'
    _     = [ \t\n\r]*
--------
1+2*3
--------
1+2-3*4+1
--------
x^n^2+1
=======================================
    exp   = _ opx _
    opx   = pre (op pre)* <infix>
    pre   = pfx? var
    var   = val / id / '(' _ exp _ ')'
    val   = [0-9]+
    id    = [a-z]+
    pfx   = [-+]
    op    = _ (op_1L/op_2L/op_4L/op_5L/op_3L) _
    op_1L = '||'
    op_2L = '&&'
    op_3L = '<'/'>'/'>='/'<='/'=='/'!='
    op_4L = [-+|^]
    op_5L = [*/%&]/'<<'/'>>'/'&^'
    _     = [ \t\n\r]*
--------
1+2*3
--------
1+2-3*4+1
--------
x+1>n*3&&p!=q||x/4<42